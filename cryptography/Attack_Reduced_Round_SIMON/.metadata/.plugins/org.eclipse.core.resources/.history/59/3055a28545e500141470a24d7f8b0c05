import java.util.Arrays;
import java.util.List;

import edu.rit.util.Hex;



public class CrackSimon {

	public static void main(String[] args) {
		/*byte[] pt = 
		byte[] ct = */
		byte[][] ptSet = new byte[1][3];
		byte[][] ctSet = new byte[1][3];
		
		ptSet[0] = Hex.toByteArray("16D64E9F444F");
		ctSet[0] = Hex.toByteArray("1107AB88C1BB");
		
		/*ptSet[0] = Hex.toByteArray("1D6B6CBDDFE0");
		ctSet[0] = Hex.toByteArray("B475EB754C85");
		ptSet[1] = Hex.toByteArray("C2F7F32BD8B9");
		ctSet[1] = Hex.toByteArray("15BB1F6CCA85");
		ptSet[2] = Hex.toByteArray("2E5FB44DB9CE");
		ctSet[2] = Hex.toByteArray("D80A12AAB3C6");
		ptSet[3] = Hex.toByteArray("1BE680E52187");
		ctSet[3] = Hex.toByteArray("D47F6ACEA914");
		ptSet[4] = Hex.toByteArray("1D0AC266FA88");
		ctSet[4] = Hex.toByteArray("8DA68A1BF96A");
		ptSet[5] = Hex.toByteArray("2A218D45214E");
		ctSet[5] = Hex.toByteArray("BDAD88F756E2");
		ptSet[6] = Hex.toByteArray("539299289F5E");
		ctSet[6] = Hex.toByteArray("59623DE9FDB0");
		ptSet[7] = Hex.toByteArray("F96AB97683A2");
		ctSet[7] = Hex.toByteArray("F6A3DB7A2CDA");
		ptSet[8] = Hex.toByteArray("B35FBB4559B2");
		ctSet[8] = Hex.toByteArray("26642AE883AE");
		ptSet[9] = Hex.toByteArray("EF4DB32C9952");
		ctSet[9] = Hex.toByteArray("6923CD5B53F0");*/
		
		MitmAttackSimon attack = new MitmAttackSimon(ptSet, ctSet);
		List<byte[]> result = attack.execute();
		for (byte[] bs : result) {
			System.out.println(Hex.toString(bs));
		}
		test();
	}
	
	private static void test()
	{
		SimonCipher t = new SimonCipher();
		//	 t.test(Hex.to, plainText)
		byte[] sub1 = Hex.toByteArray("0000ff");
//		byte[] sub1 = Hex.toByteArray("D602B2");
		byte[] sub2 = Hex.toByteArray("005159");
//		byte[] sub2 = Hex.toByteArray("4B7662");
		byte[] sub3 = Hex.toByteArray("0096a7");
//		byte[] sub3 = Hex.toByteArray("FDA03A");
		byte[] pt = Hex.toByteArray("16D64E9F444F");
//		byte[] pt = Hex.toByteArray("178F860127E4");
		byte[] ct = Arrays.copyOf(pt, pt.length);

		for (int i = 0; i < 3; i++) {
			switch(i)
			{
			case 0:
				ct = t.encrypt(sub1, ct);
				break;
			case 1:
				ct = t.encrypt(sub2, ct);
				break;
			case 2:
				ct = t.encrypt(sub3, ct);
				break;
			}
		}
		System.out.println(Hex.toString(ct));
		
/*		pt = Hex.toByteArray("1107AB88C1BB");
		ct = Arrays.copyOf(pt, pt.length);
		for (int i = 0; i < 3; i++) {
			switch(i)
			{
			case 0:
//				System.out.println();
				ct = t.decrypt(sub3, ct);
				System.out.printf("round 3 decrypted : %s\n",Hex.toString(ct));
				break;
			case 1:
//				System.out.println();
				ct = t.decrypt(sub2, ct);
				System.out.printf("round 2 decrypted : %s\n",Hex.toString(ct));
				break;
			case 2:
//				System.out.println();
				ct = t.decrypt(sub1, ct);
				System.out.printf("round 1 decrypted : %s\n",Hex.toString(ct));
				break;
			}
		}*/
//		System.out.println(Hex.toString(ct));
	}
}
