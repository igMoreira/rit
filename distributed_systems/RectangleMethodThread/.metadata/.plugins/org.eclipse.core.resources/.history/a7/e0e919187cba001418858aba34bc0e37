import java.security.InvalidParameterException;


/***
 * 
 * @author igMoreira
 *	Will provide the user an executable application, will be responsible
 *	for get the usre input and validate it.
 */
public class ComputeArea {

	/***
	 * Executable method
	 * @param args: The user input passed through the command line.
	 * @InvalidParameterException: If the parameters provided by the user are incorrect this execeptionis thrown
	 * 
	 */
	public static void main(String[] args) {
		if(args.length < 5)
		{
			throw new InvalidParameterException("SYNTAX ERROR: The correct syntax is "
					+ "ComputeArea <threads> <intervals> <start> <end> <function>");
		}
		
	}
	
	/***
	 * Validates the Thread parameter provided by the user.
	 * This parameter is valid only if is a number greater than 0.
	 * @return: If the parameter is valid True, otherwise will return False
	 */
	private static boolean validateThreadArgument()
	{
		throw new UnsupportedOperationException();
	}
	
	/***
	 * Vaidates the Intervals parameter provided by the user.
	 * This parameter is valid only if is a number greater than 0.
	 * @return: If the parameter is valid True, otherwise will return False
	 */
	private static boolean validateIntervalsArgument()
	{
		throw new UnsupportedOperationException();
	}
	
	/***
	 * Validates the points provided by the user to calculate the area.
	 * This parameters are valid only if the starting point is smaller than the end point,
	 * and both are numbers.
	 * @return: If the parameter is valid True, otherwise returns False
	 */
	private static boolean validatePointsArgument()
	{
		throw new UnsupportedOperationException();
	}

}
