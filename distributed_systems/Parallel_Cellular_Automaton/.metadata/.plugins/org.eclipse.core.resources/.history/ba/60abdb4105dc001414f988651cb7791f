import java.util.BitSet;


public class CA {

	public static void main(String[] args) {

		String inputedRule = "01111000";
		int n = 20;
		int s = 20;
		int[] positions = {2,3,5,6,8,10,11,16,17,18};
		BitSet updateRule = BitSet.valueOf(inputedRule.getBytes());
		
		// Creates a bit set of length equals n
		// All bits are initially false (0)
		BitSet initialState = new BitSet(n);
		
		// Set true (1) in the specified positions
		for (int i = 0; i < positions.length; i++) {
			initialState.set(positions[i], true);
		}
		
		while(s != 0)
		{
			ParallelCellularAutomaton pca = new ParallelCellularAutomaton(updateRule);
			initialState = pca.calcNextState(initialState);
			s--;
		}
		
	}

}
