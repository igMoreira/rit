import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;


public class UdpSender extends SenderThread {
	private DatagramSocket server;
	private byte[] sendData = null;
	private int port = 0;
	private InetAddress IPAddress = null;
	private BlockingQueue<byte[]> sharedBuffer = new ArrayBlockingQueue<byte[]>(1);

	public UdpSender(DatagramSocket server) {
		this.server = server;
	}

	@Override
	public void sendMessage(String message, int port, InetAddress IPAddress) {
			sharedBuffer.put(message.getBytes());
			this.port = port;
			this.IPAddress = IPAddress;
	}

	@Override
	public void run() {
		synchronized(this)
		{
			while(true)
			{
				try{
					while(sendData == null)
					{
						wait();
					}
					DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, port);
					try {
						server.send(sendPacket);
					} catch (IOException e) {
						System.out.println("NETWORK ERROR: Error trying to send packet");
						e.printStackTrace();
						System.exit(0);
					}
					sendData = null;
					port = 0;
					IPAddress = null;
				}
				catch(InterruptedException e)
				{
					e.printStackTrace();
				}
		}
		}
	}

	@Override
	public void sendMessage(String message) {
		
	}
}
