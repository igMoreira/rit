import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;


public class UdpSender extends SenderThread {
	private DatagramSocket server;
	private int port = 0;
	private BlockingQueue<InetAddress> IPAddress = new ArrayBlockingQueue<InetAddress>(1);
	private BlockingQueue<byte[]> sendData = new ArrayBlockingQueue<byte[]>(1);

	public UdpSender(DatagramSocket server) {
		this.server = server;
	}

	@Override
	public void sendMessage(String message, int port, InetAddress IPAddress) {
		synchronized(this)
		{
			try {
				this.port = port;
				this.IPAddress = IPAddress;
				sendData.put(message.getBytes());
				
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void run() {
			while(true)
			{
				try{
					byte[] sendData = this.sendData.take();
					System.out.println(new String(sendData));
					if(sendData != null)
					{
						DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, port);
						try {
							server.send(sendPacket);
						} catch (IOException e) {
							System.out.println("NETWORK ERROR: Error trying to send packet");
							e.printStackTrace();
							System.exit(0);
						}
					}
				}
				catch(InterruptedException e)
				{
					e.printStackTrace();
				}
			}
	}

	@Override
	public void sendMessage(String message) {
		
	}
}
