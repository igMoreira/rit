import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;


public class ServerProxy implements PubDiceServices  {

/*	private final int port = 4242;
	private final String host = "localhost"; "queeg.cs.rit.edu";*/
	private ReceiverThread receiver;
	private SenderThread sender;
	private static Socket conn;
	
	public ServerProxy() throws UnknownHostException, IOException {
		if(conn == null)
		{
			conn = new Socket(host, port);
			this.receiver = new ReceiverThread(conn.getInputStream());
			this.sender = new SenderThread(conn.getOutputStream());
			this.receiver.start();
			this.sender.start();
		}
	}
	
	public ServerProxy(String host, int port) throws UnknownHostException, IOException {
		if(conn == null)
		{
			conn = new Socket(host, port);
			this.receiver = new ReceiverThread(conn.getInputStream());
			this.sender = new SenderThread(conn.getOutputStream());
			this.receiver.start();
			this.sender.start();
		}
	}

	public ReceiverThread getReceiver() {
		return receiver;
	}

	@Override
	public void join(String playerName) throws IOException {
		String request = "join "+ playerName;
		sender.sendRequest(request);
	}

	@Override
	public void turnTile(int x, boolean up) throws IOException {
		String request = "tile "+ x + ((up) ? " up " : " down ");
		sender.sendRequest(request);
	}

	@Override
	public void rollDie() {
		String request = "roll";
		sender.sendRequest(request);
	}

	@Override
	public void quit() {
		String request = "quit";
		sender.sendRequest(request);
	}

	@Override
	public void endTurn() {
		String request = "done";
		sender.sendRequest(request);
	}
	
	public void closeConnection()
	{
		try {
			receiver.getIn().close();
			sender.getOut().close();
			conn.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
}
