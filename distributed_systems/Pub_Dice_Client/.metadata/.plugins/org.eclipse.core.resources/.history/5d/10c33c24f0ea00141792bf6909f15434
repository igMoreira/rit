import java.util.List;


public class ResponseHandler implements Observer{
	private static Player realPlayer;
	private static Player virtualPlayer;
	
	public ResponseHandler(String playerName) {
		realPlayer = new Player();
		virtualPlayer = new Player();
		realPlayer.setName(playerName);
	}
	
	private void processRequest(List<String> response)
	{
		for (String r : response) {
			String[] interpretedResponse = r.split(" ");
			String command = interpretedResponse[0];
			switch(command)
			{
				case "quit": 
					System.exit(0);
					break;
				case "score":
					break;
				case "tile":
					break;
				case "dice":
					break;
				case "joined":
					playersUpdate(interpretedResponse);
					break;
				case "turn":
					break;
				case "win":
					break;
			}
		}
	}
	
	private void scoreUpdate()
	{
		
	}
	
	private void playersUpdate(String[] playersInfo)
	{
		if(!realPlayer.getName().equalsIgnoreCase(playersInfo[1]))
			virtualPlayer.setName(playersInfo[1]);
		else
			virtualPlayer.setName(playersInfo[2]);
		realPlayer.setNumber(Integer.parseInt(playersInfo[3]));
		virtualPlayer.setNumber((realPlayer.getNumber() == 1) ? 2 : 1);
	}
	
	private void turnUpdate()
	{
		
	}
	
	private void winUpdate()
	{
		
	}
	
	@Override
	public void update(List<String> response) {
		processRequest(response);
	}

}
